package dao;

/*Esta parte se chama de persistencia e faz as operações de insert, update e delete*/

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;

import conexaojdbc.SingleConnection;
import model.Userposjava;

public class UserPosDao {

	private static final List<Userposjava> Retorno = null;
	private Connection connection;

	public UserPosDao() {

	}

	public void salvar(Userposjava userposjava) {
		try {
			String sql = "insert into userposjava (inome, email) values (?,?,?)";
			PreparedStatement insert = connection.prepareStatement(sql);
			insert.setString(1, userposjava.getNome());
			insert.setString(2, userposjava.getEmail());
			insert.execute();
			connection.commit(); // salva no banco

		} catch (Exception e) {
			try {
				connection.rollback();
			} catch (SQLException e1) {

				e1.printStackTrace();
			}
			e.printStackTrace();

		}
	}

	public Userposjava buscar(Long id) throws Exception {
		Userposjava retorno = new Userposjava();

		String sql = "select * from userposjava where id = " + id;

		PreparedStatement statement = connection.prepareStatement(sql);
		ResultSet resultado = statement.executeQuery();

		while (resultado.next()) {
			Userposjava userposjava = new Userposjava();
			userposjava.setId(resultado.getLong("id"));
			userposjava.setNome(resultado.getString("nome"));
			userposjava.setEmail(resultado.getString("email"));
		}
		return retorno;

	}

	@Test
	public void initBuscar() {

		UserPosDao dao = new UserPosDao();

		try {
			Userposjava userposjava = dao.buscar(2L);

			System.out.println(userposjava);

		} catch (Exception e) {

		}

	}

	private void buscar(String string) {

	}

	public List<Userposjava> listar() throws Exception {
		List<Userposjava> list = new ArrayList<Userposjava>();

		String sql = "select * from userposjava";

		PreparedStatement statement = connection.prepareStatement(sql);
		ResultSet resultado = statement.executeQuery();

		Userposjava retorno = null;
		while (resultado.next()) {

			retorno.setId(resultado.getLong("id"));
			retorno.setNome(resultado.getString("nome"));
			retorno.setEmail(resultado.getString("email"));

		}

		return Retorno;
	}

	public void atualizar(Userposjava userposjava) {
		try {

			String sql = "update userposjava set nome = ? where id = " + userposjava.getId();

			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setString(1, userposjava.getNome());

			statement.execute();
			connection.commit();

		} catch (Exception e) {
			try {
				connection.rollback();
			} catch (Exception e1) {
				
			}
			e.printStackTrace();
		}

	}

	public void deletar (Long id) {
		try {
			
			String sql = "delete from userposjava where id =  " + id;
			connection.commit();
		} catch (Exception e) {
			try {
			connection.rollback();
		} catch (SQLException e1) {
			e1.printStackTrace();
		}
			e.printStackTrace();
		}
	}
	
}










